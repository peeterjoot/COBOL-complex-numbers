       IDENTIFICATION DIVISION.
       PROGRAM-ID.    MAIN.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       COPY CMPXLBRY.
       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-V1-==.
       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-V2-==.
       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-V3-==.

       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-CONJPARM-==.

       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-MULTPARM-OUT-==.

       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-ADDPARM-OUT-==.
       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-SUBPARM-OUT-==.

       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-DIVPARM-OUT-==.
       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-INVPARM-OUT-==.

       COPY FLOAT REPLACING ==(PRFX)== BY ==WS-SCALEPARM-IN-==.
       COPY COMPLEX REPLACING ==(PRFX)== BY ==WS-SCALEPARM-OUT-==.

       COPY FLOAT REPLACING ==(PRFX)== BY ==WS-REAL-==.
       COPY FLOAT REPLACING ==(PRFX)== BY ==WS-IMAG-==.

       COPY CDISPLAY REPLACING ==(PRFX)== BY ==WS-DISPPARM-==.
       COPY COMPLEX  REPLACING ==(PRFX)== BY ==WS-DISPPARM-==.
       PROCEDURE DIVISION.

      * A = (1,2)
           MOVE 1 TO WS-V1-RE
           MOVE 2 TO WS-V1-IM
           MOVE 'A' TO WS-DISPPARM-N

           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-V1-COMPLEX

      * B = (3,4)
           MOVE 3 TO WS-V2-RE
           MOVE 4 TO WS-V2-IM

           MOVE 'B' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-V2-COMPLEX

      * C = A + B
           CALL COMPLEX-ADD-RETURN USING
             WS-V1-COMPLEX,
             WS-V2-COMPLEX,
             WS-ADDPARM-OUT-COMPLEX

           MOVE 'A + B' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-ADDPARM-OUT-COMPLEX

      * A' += B
           MOVE WS-V1-COMPLEX TO WS-V3-COMPLEX
           CALL COMPLEX-ADD-MODIFY USING
             WS-V3-COMPLEX,
             WS-V2-COMPLEX

           MOVE 'A += B' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-V3-COMPLEX

      * D = B - A
           CALL COMPLEX-SUB-RETURN USING
             WS-V2-COMPLEX,
             WS-V1-COMPLEX,
             WS-SUBPARM-OUT-COMPLEX

           MOVE 'B - A' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-SUBPARM-OUT-COMPLEX

      * E = A^*
           MOVE WS-V1-COMPLEX TO WS-CONJPARM-COMPLEX
           CALL COMPLEX-CONJUGATE-MODIFY USING WS-CONJPARM-COMPLEX
           MOVE 'CONJUGATE(A)' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-CONJPARM-COMPLEX

      * F = -A
           MOVE -1 to WS-SCALEPARM-IN-V
           CALL COMPLEX-SCALE-RETURN USING
             WS-V1-COMPLEX,
             WS-SCALEPARM-IN-V,
             WS-SCALEPARM-OUT-COMPLEX
           MOVE '-A' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-SCALEPARM-OUT-COMPLEX

      * G = RE(A)
           CALL COMPLEX-REAL-RETURN USING WS-V1-COMPLEX, WS-REAL-V
           MOVE WS-REAL-V TO WS-DISPPARM-RE
           MOVE 0         TO WS-DISPPARM-IM
           MOVE 'RE(A)'   TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-DISPPARM-COMPLEX

      * H = IM(A)
           CALL COMPLEX-IMAG-RETURN USING WS-V1-COMPLEX, WS-IMAG-V
           MOVE WS-IMAG-V TO WS-DISPPARM-RE
           MOVE 0         TO WS-DISPPARM-IM
           MOVE 'IM(A)'   TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-DISPPARM-COMPLEX

      * K = A * B
           CALL COMPLEX-MULT-RETURN USING
             WS-V1-COMPLEX,
             WS-V2-COMPLEX,
             WS-MULTPARM-OUT-COMPLEX
           MOVE 'A * B' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-MULTPARM-OUT-COMPLEX

      * L = 1/A
           CALL COMPLEX-INVERSE-RETURN USING
             WS-V1-COMPLEX,
             WS-INVPARM-OUT-COMPLEX
           MOVE '1/A' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-INVPARM-OUT-COMPLEX

      * M = A/B
           CALL COMPLEX-DIVIDE-RETURN USING
             WS-V1-COMPLEX,
             WS-V2-COMPLEX,
             WS-DIVPARM-OUT-COMPLEX
           MOVE 'A/B' TO WS-DISPPARM-N
           CALL COMPLEX-DISPLAY USING
             WS-DISPPARM-N,
             WS-DIVPARM-OUT-COMPLEX

           GOBACK
           .

      * vim: et ts=4 sw=4
