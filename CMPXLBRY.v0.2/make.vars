# DO NOT EDIT.  GENERATED WITH lz_mkmake version 0.7.15
# deferred evaluation rule:
COMPILATIONDATABASE = $(OUTDIR)/$*.sql
CWD := $(shell pwd)
LZ_FSROOT := $(shell lz_findfsroot)
ifeq ($(LZ_FSROOT),/)
	FSCWD := $(CWD)
	FSRELCWD :=
	CLITMPPATH = '$@.tmp'
	CLITMPPATHDIR = '$(dir $@.tmp)'
else
	FSCWD := $(subst /var/lzlabs.d/fs_root,,$(CWD))
	FSRELCWD := $(FSCWD)/
ifdef FSCOPY
	CLITMPPATH = '$(LZ_FSROOT)/tmp/$@.tmp'
	CLITMPPATHDIR = '$(dir $(LZ_FSROOT)/tmp/$@.tmp)'
else
	CLITMPPATH = '$@.tmp'
	CLITMPPATHDIR = '$(dir $@.tmp)'
endif
endif

ifdef QUIET
Q := @
QREDIRECT = > '$(OUTDIR)/$*.y' 2>&1 && /bin/true || (cat '$(OUTDIR)/$*.y' && /bin/false)
SAYWHAT = $(Q)echo "[$(1)]"
else
Q := 
SAYWHAT :=
endif

CLIREDIRECT = > $(CLITMPPATH) 2>&1 && /bin/true || (cat $(CLITMPPATH) && rm -f $(CLITMPPATH) && /bin/false)

ifdef NOBIND
BINDCMD :=
else
BINDCMD = $(Q)$(LZBINDSQL) --library --fstmp $(BINDTMP) $(DE_BINDFLAGS) $(BINDFLAGS) $(BINDFLAGS_$(BASEPATH)) --path '$(XMLNAME_$(BASEPATH))' || (rm -f '$@' && /bin/false)
endif

ifdef DOCICS
ALLCICSCMD = $(Q)$(LZRCSCOPE) --db '$(COMPILATIONDATABASE)' --cics > '$(OUTDIR)/$*.allcics'
else
ALLCICSCMD :=
endif

ifdef DODLI
ALLDLICMD = $(Q)$(LZRCSCOPE) --db '$(COMPILATIONDATABASE)' --dli > '$(OUTDIR)/$*.alldli'
else
ALLDLICMD :=
endif

ifdef DOSCOPE
ifdef OUTDIR
MKDEPSCMD = $(Q)$(LZMKDEPS) --db '$(COMPILATIONDATABASE)' --path '$*.$(1)' --objdir $(OUTDIR)/ > '$(OUTDIR)/$*.d'
else
MKDEPSCMD = $(Q)$(LZMKDEPS) --db '$(COMPILATIONDATABASE)' --path '$*.$(1)' > '$(OUTDIR)/$*.d'
endif
else
MKDEPSCMD :=
endif


USERUC := $(shell echo $(USER) | tr '[a-z]' '[A-Z]')
BINDTMP := $(LZ_FSROOT)/tmp/$(USERUC)/bindtmp$$$$

COBSUFF ?= cbl
PLISUFF ?= pli

MAKESUBDIR ?=

# allow overrides for development purposes:
LZMKDEPS ?= lz_mkdeps --dep=::
LZBINDSQL ?= lz_bindsql
LZCOPYMOD ?= lz_copymod
LZDELETE ?= lz_delete
LZALLOCATE ?= lz_allocate
LZRCSCOPE ?= lz_rcscope

# these are all deferred evaluation:
DIRPATH = $(shell echo $(dir $(OUTDIR)/$*) | sed 's,[/\.],_,g')
BASEPATH = $(DIRPATH)$(basename $(notdir $*))
DE_BINDFLAGS = --plan $(PLAN_$(BASEPATH)) --collid $(COLLID_$(BASEPATH)) --database $(DATABASE_$(BASEPATH)) $(addprefix --schema ,$(SCHEMA_$(BASEPATH)))
BINDMEMBER = $(BINDTMP)/$(shell echo $(notdir $(basename $*)) | sed 's/[_-]/0/g;s/\(........\).*/\1/;' | tr '[a-z]' '[A-Z]')

-include $(MAKESUBDIR)make.morevars

ifdef STATIC_LINK_RUNTIME
LDFLAGS += :LinkOptions=-llz_cruntime,-ldl,--no-undefined
LDFLAGS += :LinkStaticRuntime
else
LDFLAGS += :LinkOptions=-llz_cruntime,--no-undefined
endif

COBRC ?= cobrc
DEFINIT ?= :DefInit=FALSE
COBFLAGS += $(DEFINIT)

ifdef COBDYNLINK
COBFLAGS += :DynExternals=$(shell echo $(COBDYNLINK) | tr ' ' ,)
endif

#ifneq ($(OUTDIR),.)
#OUTDIRFLAGS := :OutputDir=$(OUTDIR)
#endif

PLIRC ?= plirc

ifdef PLIDYNLINK
PLIFLAGS += :DynExternals=$(shell echo $(PLIDYNLINK) | tr ' ' ,)
endif

# common flags for PL/I and COBOL:
COMPILER_FLAGS += :Link=FALSE
COMPILER_FLAGS += :Debug=TRUE
#COMPILER_FLAGS += $(OUTDIRFLAGS)
ifdef DOSCOPE
COMPILER_FLAGS += :DBDriver=Sqlite :DBConnectString='$(COMPILATIONDATABASE)' :RepoSaveTags=TRUE
endif

define cobol_compile
	$(Q)mkdir -p '$(dir $@)'
	$(Q)rm -f '$@' '$(OUTDIR)/$*.allcics' '$(OUTDIR)/$*.alldli' '$(OUTDIR)/$*.sql' '$(OUTDIR)/$*.y'
	$(call SAYWHAT,'$*.$(1)')
	$(Q)$(COBRC) $(COBFLAGS) $(COBFLAGS_$(BASEPATH)) $(COMPILER_FLAGS) '$(filter %.$(1),$^)' :OutputDir='$(dir $@)' $(QREDIRECT)
	$(Q)rm -f $(DBRMDELETELIST)
	$(BINDCMD)
	$(ALLCICSCMD)
	$(ALLDLICMD)
	$(call MKDEPSCMD,$(1))
endef

define pli_compile
	$(Q)mkdir -p '$(dir $@)'
	$(Q)rm -f '$@' '$(OUTDIR)/$*.allcics' '$(OUTDIR)/$*.alldli' '$(OUTDIR)/$*.sql' '$(OUTDIR)/$*.y'
	$(call SAYWHAT,'$*.$(1)')
	$(Q)$(PLIRC) $(PLIFLAGS) $(PLIFLAGS_$(BASEPATH)) $(COMPILER_FLAGS) '$(filter %.$(1),$^)' :OutputDir='$(dir $@)' $(QREDIRECT)
	$(Q)rm -f $(DBRMDELETELIST)
	$(BINDCMD)
	$(ALLCICSCMD)
	$(ALLDLICMD)
	$(call MKDEPSCMD,$(1))
endef

DIGNUS_ROOT := /usr/local/dignus

ASZ31 := dasm
ASZ31FLAGS += -flisting_style=both
ASZ31FLAGS += -xsd
ASZ31FLAGS += -fdupalias
ASZ31FLAGS += -L $(DIGNUS_ROOT)/maclib/\&M
LZSTUB_PATH := /opt/lzlabs/ASM
ASZ31FLAGS += -L "$(LZSTUB_PATH)/SDM.zip(&M.MAC)"

LDZ31 := plink
ASZ31_LDFLAGS += -amode=24
ASZ31_LDFLAGS += -b
ASZ31_LDFLAGS += -xref
ASZ31_LDFLAGS += -rent
ASZ31_LDFLAGS += -rmode=any
ASZ31_LDFLAGS += -showctl
ASZ31_LDFLAGS += -fkeepweaktxt
ASZ31_LDFLAGS += -map
ASZ31_LDFLAGS += -noxmit
ASZ31_LDFLAGS += -DD=DASMOBJ=\&M
ASZ31_LDFLAGS += -I\&f
